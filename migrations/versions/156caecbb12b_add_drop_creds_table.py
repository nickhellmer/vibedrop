"""Add drop_creds table

Revision ID: 156caecbb12b
Revises: 04629a4f135d
Create Date: 2025-08-12 21:05:48.395821

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '156caecbb12b'
down_revision = '04629a4f135d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drop_creds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_likes', sa.Integer(), nullable=False),
    sa.Column('total_dislikes', sa.Integer(), nullable=False),
    sa.Column('total_possible', sa.Integer(), nullable=False),
    sa.Column('drop_cred_score', sa.Float(), nullable=False),
    sa.Column('computed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('score_version', sa.SmallInteger(), nullable=False),
    sa.Column('params', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('window_label', sa.String(length=32), nullable=True),
    sa.Column('window_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('window_end', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_drop_creds__user_id__users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_drop_creds'))
    )
    with op.batch_alter_table('drop_creds', schema=None) as batch_op:
        batch_op.create_index('ix_drop_creds_user_computed_at', ['user_id', 'computed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_drop_creds_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('sound_circles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('sound_circle_circle_name_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('sound_circle_invite_code_key'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_sound_circles__circle_name'), ['circle_name'])
        batch_op.create_unique_constraint(batch_op.f('uq_sound_circles__invite_code'), ['invite_code'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('user_spotify_id_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('user_vibedrop_username_key'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_users__spotify_id'), ['spotify_id'])
        batch_op.create_unique_constraint(batch_op.f('uq_users__vibedrop_username'), ['vibedrop_username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users__vibedrop_username'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_users__spotify_id'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('user_vibedrop_username_key'), ['vibedrop_username'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint(batch_op.f('user_spotify_id_key'), ['spotify_id'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('sound_circles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_sound_circles__invite_code'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_sound_circles__circle_name'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('sound_circle_invite_code_key'), ['invite_code'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint(batch_op.f('sound_circle_circle_name_key'), ['circle_name'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('drop_creds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_drop_creds_user_id'))
        batch_op.drop_index('ix_drop_creds_user_computed_at')

    op.drop_table('drop_creds')
    # ### end Alembic commands ###
